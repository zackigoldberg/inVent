@model inVent.Models.SaleModels.SaleEdit

@{
    ViewBag.Title = "Edit";
}

<h2>Edit Sale</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">

    @if (TempData.ContainsKey("SaveResult"))
    {
        <div class="alert-danger" role="alert">
            @ViewBag.SaveResult
            <button type="button" class="close" data-dismiss="alert">
                <span>&times;</span>
            </button>
            @TempData["SaveResult"]
        </div>
    }
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    
    @Html.HiddenFor(model => model.FacilityId)
    @Html.HiddenFor(model => model.ItemNumber)
    @Html.HiddenFor(model => model.InventoryId)
    <div class="form-group">
        @Html.LabelFor(model => model.SaleId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SaleId, new { htmlAttributes = new { @readonly = "read-only"} })
            @Html.ValidationMessageFor(model => model.SaleId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Salesman, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Salesman, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Salesman, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Items, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @if (Model.Facilities != null)
        {
                @Html.DropDownList("ItemNumber", new SelectList(Model.Items, "ItemNumber", "Name", Model.ItemNumber), new { htmlAttributes = new { @readonly = "readonly" } })
        }
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Facilities, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @if (Model.Items != null)
            {
            @Html.DropDownList("FacilityId", new SelectList(Model.Facilities, "FacilityId", "Name", Model.FacilityId), new { htmlAttributes = new { @readonly = "readonly" } })
            }
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.QuantitySold, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.QuantitySold, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.QuantitySold, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SaleTotal, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SaleTotal, new { htmlAttributes = new { @readonly="read-only"} })
            @Html.ValidationMessageFor(model => model.SaleTotal, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
