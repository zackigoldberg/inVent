@model inVent.Models.SaleModels.SaleCreate

@{
    ViewBag.Title = "Create";
}

<h2>New Sale</h2>

@if (Model.Inventories != null)
{
    <h3>Inventories Available</h3>
    <table class="table">
        <tr>
            <th></th>
            <th> Facility Name: </th>
            <th> Item Name: </th>
            <th> Pack Size: </th>
            <th> Quantity: </th>
            <th> Price: </th>
        </tr>
        @foreach (var inventory in Model.Inventories)
        {

            <tr>
                <td></td> 
                <td>
                    @inventory.Facility.Name
                </td>
                <td>
                    @inventory.Item.Name
                </td>
                <td>
                    @inventory.Item.PackSize
                </td>
                <td>
                    @inventory.Quantity
                </td>
                <td>
                    $@inventory.Price
                </td>
            </tr>

        }
    </table>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Salesman, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Salesman, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Salesman, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.QuantitySold, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.QuantitySold, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.QuantitySold, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FacilityId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("FacilityId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FacilityId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItemNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ItemNumber", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ItemNumber, "", new { @class = "text-danger" })

            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
